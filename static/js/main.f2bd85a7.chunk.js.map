{"version":3,"sources":["components/Header.jsx","components/BoardCol.jsx","components/BoardRow.jsx","components/RenderBlockCol.jsx","components/RenderBlockRow.jsx","components/RenderBlocks.jsx","components/TrayBlock.jsx","components/switchBlocks.js","components/simSwitchBlocks.js","components/Board.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","BoardCol","value","rowIndex","colIndex","deliver","deliverFunc","onClick","BoardRow","boardColMap","map","col","index","RenderBlockCol","RenderBlockRow","RenderBlockRowMap","renderBlocks","blockCode","blockRowMap","Object","values","row","TrayBlock","codeDeliver","indexDeliver","trayIndex","RenderBlocks","switchBlocks","tempBoard","sRow","sCol","i","j","simSwitchBlocks","Board","useState","arr","Array","fill","create2DArray","board","setBoard","score","setScore","setBlockCode","blockIndexInTrayArr","setBlockIndexInTrayArr","tempArr","min","Math","ceil","max","floor","push","random","createRandomTray","trayBlockArr","setTrayBlockArr","useEffect","simulateTray","deliverClickIndex","setBlock","boardRowMap","trayBlockMap","settedBoard","console","log","checkerAfterBlockSet","checkToClear","splice","sumOfTray","changeRandomTray","defGeo","copyOfBoard","toClear","sqr","sumOfRow","sumOfCol","sumOfSquare","k","clearBoard","scoreByAction","rmRow","rmCol","rmSqr","setCount","emptyTrayCount","length","simulateBlockSet","error","simBoard","simSettedBoard","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAOeA,MAPf,WACE,OACE,qBAAKC,UAAU,Y,qBC+CFC,MAjDjB,YAAyD,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,QAEtCC,EAAc,WAClBD,EAAQF,EAAUC,IAGlB,OAAkB,IAAbD,GAA+B,IAAbA,GAA+B,IAAbA,EACrB,IAAbC,GAA+B,IAAbA,GAA+B,IAAbA,EAErC,qBACEJ,UAAqB,IAAVE,EAAc,YAAc,mBACvCK,QAASD,IAOX,qBACEN,UAAqB,IAAVE,EAAc,mBAAqB,mBAC9CK,QAASD,IAOG,IAAbF,GAA+B,IAAbA,GAA+B,IAAbA,GAA+B,IAAbA,GAA+B,IAAbA,GAA+B,IAAbA,EAE3F,qBACEJ,UAAqB,IAAVE,EAAc,YAAc,mBACvCK,QAASD,IAOX,qBACEN,UAAqB,IAAVE,EAAc,mBAAqB,mBAC9CK,QAASD,KCzBNE,MAbf,YAA+C,IAA5BN,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,SAAUE,EAAU,EAAVA,QAE5BI,EAAcP,EAAMQ,KAAI,SAACC,EAAKC,GAAN,OAAiB,cAAC,EAAD,CAAUV,MAAOS,EAAKR,SAAUA,EAAUC,SAAUQ,EAAOP,QAASA,GAAcO,MAEjI,OACE,qBACEZ,UAAU,YADZ,SAGGS,KCDUI,MATjB,YAAkC,IAATX,EAAQ,EAARA,MACrB,OACE,qBACEF,UAAqB,IAAVE,EAAc,aAAe,uBCWjCY,MAZf,YAAkC,IAC1BC,EADyB,EAARb,MACSQ,KAAI,SAACC,EAAKC,GAAN,OAAiB,cAAC,EAAD,CAAgBV,MAAOS,GAAUC,MAEtF,OACE,qBACEZ,UAAU,iBADZ,SAGGe,KCgCQC,MAvCf,YAAoC,IAAbC,EAAY,EAAZA,UA8BbC,EAAcC,OAAOC,OA5BT,CACd,EAAG,GAGH,EAAG,CACC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,IAEpB,EAAG,CACC,EAAG,CAAC,EAAG,EAAG,IAEd,EAAG,CACC,EAAG,CAAC,GACJ,EAAG,CAAC,GACJ,EAAG,CAAC,GACJ,EAAG,CAAC,GACJ,EAAG,CAAC,IAER,EAAG,CACC,EAAG,CAAC,GACJ,EAAG,CAAC,GACJ,EAAG,CAAC,IAER,EAAG,CACC,EAAG,CAAC,EAAG,GACP,EAAG,CAAC,EAAG,KAI6BH,IAAYP,KAAI,SAACW,EAAKT,GAAN,OAAiB,cAAC,EAAD,CAAgBV,MAAOmB,GAAUT,MAE9G,OACI,qBAAKZ,UAAU,aAAf,SACKkB,KClBEI,MAhBf,YAAuE,IAAnDL,EAAkD,EAAlDA,UAAWM,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,UAMxD,OACE,qBACIzB,UAAU,kBACVO,QARiB,WACjBgB,EAAYN,GACZO,EAAaC,IAIjB,SAII,cAACC,EAAD,CAAcT,UAAWA,OC+ElBU,MA5Ff,SAAsBC,EAAWX,EAAWY,EAAMC,GAC9C,OAAQb,GAEJ,KAAK,EACD,GAAIa,EAAO,EACP,OAAO,EAGX,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAkC,IAA9BH,EAAUC,GAAMC,EAAOC,GACvB,OAAO,EAIf,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACnBH,EAAUC,GAAMC,EAAOC,GAAK,EAEhC,OAAOH,EAEX,KAAK,EACD,GAAIE,EAAO,EACP,OAAO,EAEX,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAkC,IAA9BH,EAAUC,GAAMC,EAAOC,GACvB,OAAO,EAIf,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IACnBH,EAAUC,GAAMC,EAAOC,GAAK,EAEhC,OAAOH,EAEX,KAAK,EACD,GAAIC,EAAO,EACP,OAAO,EAGX,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAkC,IAA9BH,EAAUC,EAAOE,GAAGD,GACpB,OAAO,EAIf,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnBH,EAAUC,EAAOE,GAAGD,GAAQ,EAEhC,OAAOF,EAEX,KAAK,EACD,GAAIC,EAAO,EACP,OAAO,EAGX,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAkC,IAA9BH,EAAUC,EAAOE,GAAGD,GACpB,OAAO,EAIf,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnBH,EAAUC,EAAOE,GAAGD,GAAQ,EAEhC,OAAOF,EAEX,KAAK,EACD,GAAIC,EAAO,EACP,OAAO,EAEX,GAAIC,EAAO,EACP,OAAO,EAGX,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IACpB,GAAsC,IAAlCJ,EAAUC,EAAOE,GAAGD,EAAOE,GAC3B,OAAO,EAInB,IAAK,IAAID,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IACpBJ,EAAUC,EAAOE,GAAGD,EAAOE,GAAK,EAGxC,OAAOJ,ICfJK,MAvEf,SAAyBL,EAAWX,EAAWY,EAAMC,GACjD,OAAQb,GAEJ,KAAK,EACD,GAAIa,EAAO,EACP,OAAO,EAGX,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAkC,IAA9BH,EAAUC,GAAMC,EAAOC,GACvB,OAAO,EAGf,OAAO,EAEX,KAAK,EACD,GAAID,EAAO,EACP,OAAO,EAEX,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAkC,IAA9BH,EAAUC,GAAMC,EAAOC,GACvB,OAAO,EAGf,OAAO,EAEX,KAAK,EACD,GAAIF,EAAO,EACP,OAAO,EAGX,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAkC,IAA9BH,EAAUC,EAAOE,GAAGD,GACpB,OAAO,EAGf,OAAO,EAEX,KAAK,EACD,GAAID,EAAO,EACP,OAAO,EAGX,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,IACnB,GAAkC,IAA9BH,EAAUC,EAAOE,GAAGD,GACpB,OAAO,EAGf,OAAO,EAEX,KAAK,EACD,GAAID,EAAO,EACP,OAAO,EAEX,GAAIC,EAAO,EACP,OAAO,EAGX,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IACpB,GAAsC,IAAlCJ,EAAUC,EAAOE,GAAGD,EAAOE,GAC3B,OAAO,EAInB,OAAO,IC2JJE,MAjMf,WACE,MAA0BC,mBApB5B,SAAuBd,EAAKV,GAE1B,IADA,IAAIyB,EAAM,IAAIC,MAAMhB,GACXU,EAAI,EAAGA,EAAIV,EAAKU,IACvBK,EAAIL,GAAK,IAAIM,MAAM1B,GACnByB,EAAIL,GAAGO,KAAK,GAEd,OAAOF,EAc4BG,CAAc,EAAG,IAApD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BN,mBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAkCR,mBAAS,GAA3C,mBAAOlB,EAAP,KAAkB2B,EAAlB,KACA,EAAsDT,mBAAS,GAA/D,mBAAOU,EAAP,KAA4BC,EAA5B,KACA,EAAwCX,mBAf1C,WAIE,IAHA,IAAIY,EAAU,GACRC,EAAMC,KAAKC,KAAK,GAChBC,EAAMF,KAAKG,MAAM,GACdrB,EAAI,EAAGA,GAAK,EAAGA,IACtBgB,EAAQM,KAAKJ,KAAKG,MAAMH,KAAKK,UAAYH,EAAMH,EAAM,IAAMA,GAE7D,OAAOD,EAQ0CQ,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WAERC,MACC,CAACH,IAEJ,IAAMI,EAAoB,SAACvC,EAAKV,GAC9BkD,EAASxC,EAAKV,IAGVmD,EAActB,EAAM9B,KAAI,SAACW,EAAKT,GAAN,OAAiB,cAAC,EAAD,CAAUV,MAAOmB,EAAKlB,SAAUS,EAAOP,QAASuD,GAAwBhD,MACjHmD,EAAeP,EAAa9C,KAAI,SAACO,EAAWL,GAAZ,OAAuB,cAAC,EAAD,CAAWK,UAAWA,EAAWM,YAAaqB,EAAcpB,aAAcsB,EAAwBrB,UAAWb,GAAYA,MAEhLiD,EAAW,SAAChC,EAAMC,GACtB,IACIkC,EAAcrC,EADFa,EAC0BvB,EAAWY,EAAMC,GACvC,IAAhBkC,EACFC,QAAQC,IAAI,iBAEiB,iBAAfF,IACdvB,EAAS,YAAIuB,IACbG,MAKEA,EAAuB,WAE3BC,EADkB5B,GAElBgB,EAAaa,OAAOxB,EAAqB,EAAG,GAG5C,IADA,IAAIyB,EAAY,EACPvC,EAAI,EAAGA,EAAI,EAAGA,IACrBuC,GAAad,EAAazB,GAET,IAAduC,GAgFP,WAIE,IAHA,IAAIvB,EAAU,GACRC,EAAMC,KAAKC,KAAK,GAChBC,EAAMF,KAAKG,MAAM,GACdrB,EAAI,EAAGA,GAAK,EAAGA,IACtBgB,EAAQM,KAAKJ,KAAKG,MAAMH,KAAKK,UAAYH,EAAMH,EAAM,IAAMA,GAE7DS,EAAgBV,GAtFdwB,GAGFZ,KAIIa,EAAS,CACb,EAAG,CAAC,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,GAAI,EAAG,CAAC,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,GAAI,EAAG,CAAC,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,GACvE,EAAG,CAAC,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,GAAI,EAAG,CAAC,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,GAAI,EAAG,CAAC,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,GACvE,EAAG,CAAC,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,GAAI,EAAG,CAAC,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,GAAI,EAAG,CAAC,EAAE,EAAG,EAAE,EAAG,EAAE,EAAG,EAAE,IAGnEJ,EAAe,SAACK,GAMpB,IALA,IAAIC,EAAU,CACZrD,IAAK,GACLV,IAAK,GACLgE,IAAK,IAEE5C,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAI6C,EAAW,EACN5C,EAAI,EAAGA,EAAI,EAAGA,IACrB4C,GAAYH,EAAY1C,GAAGC,GAEZ,IAAb4C,GACFF,EAAQrD,IAAIgC,KAAKtB,GAGrB,IAAK,IAAIA,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1B,IADA,IAAI8C,EAAW,EACN7C,EAAI,EAAGA,EAAI,EAAGA,IACrB6C,GAAYJ,EAAYzC,GAAGD,GAEZ,IAAb8C,GACFH,EAAQ/D,IAAI0C,KAAKtB,GAGrB,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IAEtB,IADA,IAAI+C,EAAc,EACT9C,EAAIwC,EAAOzC,GAAG,GAAIC,GAAKwC,EAAOzC,GAAG,GAAIC,IAAK,CACjD,IAAK,IAAI+C,EAAIP,EAAOzC,GAAG,GAAIgD,GAAKP,EAAOzC,GAAG,GAAIgD,IAC5CD,GAAeL,EAAYzC,GAAG+C,GAEZ,IAAhBD,GACFJ,EAAQC,IAAItB,KAAKtB,GAIvBiD,EAAWN,IAGPM,EAAa,SAACN,GAClB,IAD8B,EAC1BD,EAAcjC,EACdyC,EAAgB,EAFU,cAGZP,EAAQrD,KAHI,IAG9B,2BACE,IAD6B,IAAtB6D,EAAqB,QACnBnD,EAAI,EAAGA,EAAI,EAAGA,IACrB0C,EAAYS,GAAOnD,GAAK,EACxBkD,IAN0B,kDASZP,EAAQ/D,KATI,IAS9B,2BACE,IAD6B,IAAtBwE,EAAqB,QACnBpD,EAAI,EAAGA,EAAI,EAAGA,IACrB0C,EAAY1C,GAAGoD,GAAS,EACxBF,IAZ0B,kDAeZP,EAAQC,KAfI,IAe9B,2BACE,IAD6B,IAAtBS,EAAqB,QACnBpD,EAAIwC,EAAOY,GAAO,GAAIpD,GAAKwC,EAAOY,GAAO,GAAIpD,IACpD,IAAK,IAAI+C,EAAIP,EAAOY,GAAO,GAAIL,GAAKP,EAAOY,GAAO,GAAIL,IACpDN,EAAYzC,GAAG+C,GAAK,EACpBE,IAnBwB,8BAuB9BtC,EAASD,EAAQuC,GACjBxC,EAAS,YAAIgC,KAcTd,EAAe,WAInB,IAHA,IAAI0B,EAAW,EACXC,EAAiB,EAEZvD,EAAI,EAAGA,EAAIyB,EAAa+B,OAAQxD,IACvC,GAAyB,IAApByB,EAAazB,GAEhB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAErB,IAAK,IAAI+C,EAAI,EAAGA,EAAI,EAAGA,IACA,IAAhBvC,EAAMR,GAAG+C,KACZd,QAAQC,IAAIV,EAAazB,IACzBsD,GAAYG,EAAiBhD,EAAOgB,EAAazB,GAAIC,EAAG+C,SAKlC,IAApBvB,EAAazB,IACrBuD,IAGc,IAAbD,GAAqC,IAAnBC,EACrBrB,QAAQC,IAAImB,EAAW,uBAEH,IAAbA,EACPpB,QAAQwB,MAAM,YAEM,IAAbJ,GACPpB,QAAQC,IAAImB,EAAW,SAIrBG,EAAmB,SAACE,EAAUzE,EAAWY,EAAMC,GACnD,IAAI6D,EAAiB,EAIrB,OAHmB,IAAd1E,IACH0E,EAAiB1D,EAAgByD,EAAUzE,EAAWY,EAAMC,IAEtC,IAAnB6D,EACI,EAEoB,IAAnBA,EACD,OADJ,GAKP,OACE,gCACE,qBAAK3F,UAAU,QAAf,SACE,qBAAKA,UAAU,aAAf,SACC0C,MAGH,qBAAK1C,UAAU,QAAf,SACG8D,IAEH,qBAAK9D,UAAU,OAAf,SACG+D,QC/MM6B,MAPf,WACE,OACE,qBAAK5F,UAAU,Y,YCiBJ6F,MAZf,WACE,OACE,qBAAK7F,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCDO8F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f2bd85a7.chunk.js","sourcesContent":["function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","function BoardCol({value, rowIndex, colIndex, deliver}) {\r\n\r\n  const deliverFunc = () => {\r\n    deliver(rowIndex, colIndex)\r\n  }\r\n    // For 3*3 Checkerboard pattern (CSS class)\r\n    if ( rowIndex === 3 || rowIndex === 4 || rowIndex === 5  ) {\r\n      if ( colIndex === 3 || colIndex === 4 || colIndex === 5  ) {\r\n        return (\r\n          <div \r\n            className={value === 0 ? \"board-col\" : \"board-col placed\"}\r\n            onClick={deliverFunc}\r\n          >\r\n          </div>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <div \r\n            className={value === 0 ? \"board-col-bright\" : \"board-col placed\"}\r\n            onClick={deliverFunc}\r\n          >\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    else {\r\n      if ( colIndex === 0 || colIndex === 1 || colIndex === 2 || colIndex === 6 || colIndex === 7 || colIndex === 8  ) {\r\n        return (\r\n          <div \r\n            className={value === 0 ? \"board-col\" : \"board-col placed\"}\r\n            onClick={deliverFunc}\r\n          >\r\n          </div>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <div \r\n            className={value === 0 ? \"board-col-bright\" : \"board-col placed\"}\r\n            onClick={deliverFunc}\r\n          >\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n  }\r\n  \r\n  export default BoardCol;\r\n  ","import BoardCol from \"./BoardCol\";\r\n\r\nfunction BoardRow({value, rowIndex, deliver}) {\r\n\r\n  const boardColMap = value.map((col, index) => (<BoardCol value={col} rowIndex={rowIndex} colIndex={index} deliver={deliver} key={index}></BoardCol>))\r\n\r\n  return (\r\n    <div \r\n      className=\"board-row\"\r\n    >\r\n      {boardColMap}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default BoardRow;\r\n  ","function RenderBlockCol({value}) {\r\n    return (\r\n      <div \r\n        className={value === 0 ? \"tray-block\" : \"tray-block placed\"}\r\n      >\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default RenderBlockCol;\r\n  ","import RenderBlockCol from \"./RenderBlockCol\";\r\n\r\nfunction RenderBlockRow({value}) {\r\n  const RenderBlockRowMap = value.map((col, index) => (<RenderBlockCol value={col} key={index}></RenderBlockCol>))\r\n\r\n  return (\r\n    <div \r\n      className=\"tray-block-row\"\r\n    >\r\n      {RenderBlockRowMap}\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default RenderBlockRow;\r\n  ","import RenderBlockRow from \"./RenderBlockRow\";\r\n\r\nfunction renderBlocks({blockCode}) {\r\n\r\n    const defBlocks = {\r\n        0: {\r\n\r\n        },\r\n        1: {\r\n            1: [1, 1, 1, 1, 1]\r\n        },\r\n        2: {\r\n            1: [1, 1, 1]\r\n        },\r\n        3: {\r\n            1: [1],\r\n            2: [1],\r\n            3: [1],\r\n            4: [1],\r\n            5: [1]\r\n        },\r\n        4: {\r\n            1: [1],\r\n            2: [1],\r\n            3: [1]\r\n        },\r\n        5: {\r\n            1: [1, 1],\r\n            2: [1, 1],\r\n        }\r\n    }\r\n    \r\n    const blockRowMap = Object.values(defBlocks[blockCode]).map((row, index) => (<RenderBlockRow value={row} key={index}></RenderBlockRow>))\r\n    \r\n    return (\r\n        <div className=\"block-wrap\">\r\n            {blockRowMap}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default renderBlocks;","import RenderBlocks from \"./RenderBlocks\"\r\n\r\nfunction TrayBlock({blockCode, codeDeliver, indexDeliver, trayIndex}) {\r\n    const setBlockInfo = () => {\r\n        codeDeliver(blockCode)\r\n        indexDeliver(trayIndex)\r\n    }\r\n\r\n  return (\r\n    <div \r\n        className=\"tray-block-area\"\r\n        onClick={setBlockInfo}\r\n    >\r\n        <RenderBlocks blockCode={blockCode}></RenderBlocks>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default TrayBlock;\r\n  ","function switchBlocks(tempBoard, blockCode, sRow, sCol) {\r\n    switch (blockCode) {\r\n        // Horizotal 5 Length bar\r\n        case 1:\r\n            if (sCol > 4) {\r\n                return 0\r\n              }\r\n            // Length Check\r\n            for (let i = 0; i < 5; i++) {\r\n                if (tempBoard[sRow][sCol + i] === 1) {\r\n                    return 0\r\n                }\r\n            }\r\n            // Set Bolock If Pass Every Tests\r\n            for (let i = 0; i < 5; i++) {\r\n                tempBoard[sRow][sCol + i] = 1\r\n            }\r\n            return tempBoard\r\n        // Horizotal 3 Length bar\r\n        case 2:\r\n            if (sCol > 6) {\r\n                return 0\r\n              }\r\n            for (let i = 0; i < 3; i++) {\r\n                if (tempBoard[sRow][sCol + i] === 1) {\r\n                    return 0\r\n                }\r\n            }\r\n            // Set Bolock If Pass Every Tests\r\n            for (let i = 0; i < 3; i++) {\r\n                tempBoard[sRow][sCol + i] = 1\r\n            }\r\n            return tempBoard\r\n        // Vertical 5 Length Bar\r\n        case 3:\r\n            if (sRow > 4) {\r\n                return 0\r\n            }\r\n            // Length Check\r\n            for (let i = 0; i < 5; i++) {\r\n                if (tempBoard[sRow + i][sCol] === 1) {\r\n                    return 0\r\n                }\r\n            }\r\n            // Set Bolock If Pass Every Tests\r\n            for (let i = 0; i < 5; i++) {\r\n                tempBoard[sRow + i][sCol] = 1\r\n            }\r\n            return tempBoard\r\n        // Vertical 3 Length Bar\r\n        case 4:\r\n            if (sRow > 6) {\r\n                return 0\r\n            }\r\n            // Length Check\r\n            for (let i = 0; i < 3; i++) {\r\n                if (tempBoard[sRow + i][sCol] === 1) {\r\n                    return 0\r\n                }\r\n            }\r\n            // Set Bolock If Pass Every Tests\r\n            for (let i = 0; i < 3; i++) {\r\n                tempBoard[sRow + i][sCol] = 1\r\n            }\r\n            return tempBoard\r\n        // 2X2 Square\r\n        case 5:\r\n            if (sRow > 7) {\r\n                return 0\r\n            }\r\n            if (sCol > 7) {\r\n                return 0\r\n            }\r\n            // Length Check\r\n            for (let i = 0; i < 2; i++) {\r\n                for (let j = 0; j <= 1; j++) {\r\n                    if (tempBoard[sRow + i][sCol + j] === 1) {\r\n                        return 0\r\n                    }\r\n                }\r\n            }\r\n            for (let i = 0; i < 2; i++) {\r\n                for (let j = 0; j <= 1; j++) {\r\n                    tempBoard[sRow + i][sCol + j] = 1\r\n                }\r\n            }\r\n            return tempBoard\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default switchBlocks;","function simSwitchBlocks(tempBoard, blockCode, sRow, sCol) {\r\n    switch (blockCode) {\r\n        // Horizotal 5 Length bar\r\n        case 1:\r\n            if (sCol > 4) {\r\n                return 0\r\n              }\r\n            // Length Check\r\n            for (let i = 0; i < 5; i++) {\r\n                if (tempBoard[sRow][sCol + i] === 1) {\r\n                    return 0\r\n                }\r\n            }\r\n            return 1\r\n        // Horizotal 3 Length bar\r\n        case 2:\r\n            if (sCol > 6) {\r\n                return 0\r\n              }\r\n            for (let i = 0; i < 3; i++) {\r\n                if (tempBoard[sRow][sCol + i] === 1) {\r\n                    return 0\r\n                }\r\n            }\r\n            return 1\r\n        // Vertical 5 Length Bar\r\n        case 3:\r\n            if (sRow > 4) {\r\n                return 0\r\n            }\r\n            // Length Check\r\n            for (let i = 0; i < 5; i++) {\r\n                if (tempBoard[sRow + i][sCol] === 1) {\r\n                    return 0\r\n                }\r\n            }\r\n            return 1\r\n        // Vertical 3 Length Bar\r\n        case 4:\r\n            if (sRow > 6) {\r\n                return 0\r\n            }\r\n            // Length Check\r\n            for (let i = 0; i < 3; i++) {\r\n                if (tempBoard[sRow + i][sCol] === 1) {\r\n                    return 0\r\n                }\r\n            }\r\n            return 1\r\n        // 2X2 Square\r\n        case 5:\r\n            if (sRow > 7) {\r\n                return 0\r\n            }\r\n            if (sCol > 7) {\r\n                return 0\r\n            }\r\n            // Length Check\r\n            for (let i = 0; i < 2; i++) {\r\n                for (let j = 0; j <= 1; j++) {\r\n                    if (tempBoard[sRow + i][sCol + j] === 1) {\r\n                        return 0\r\n                    }\r\n                }\r\n            }\r\n            return 1\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport default simSwitchBlocks;","import { useState, useEffect } from 'react';\r\nimport BoardRow from './BoardRow';\r\nimport TrayBlock from './TrayBlock';\r\nimport switchBlocks from './switchBlocks.js';\r\nimport simSwitchBlocks from './simSwitchBlocks.js';\r\n\r\n\r\n// Function for declare board\r\nfunction create2DArray(row, col) {\r\n  let arr = new Array(row);\r\n  for (let i = 0; i < row; i ++) {\r\n    arr[i] = new Array(col);\r\n    arr[i].fill(0);\r\n  }\r\n  return arr;\r\n}\r\n// Function for genarate random tray\r\nfunction createRandomTray() {\r\n  let tempArr = []\r\n  const min = Math.ceil(1)\r\n  const max = Math.floor(5)\r\n  for (let i = 1; i <= 3; i++) {\r\n    tempArr.push(Math.floor(Math.random() * (max - min + 1)) + min)\r\n  }\r\n  return tempArr\r\n}\r\n  \r\nfunction Board() {\r\n  const [board, setBoard] = useState(create2DArray(9, 9))\r\n  const [score, setScore] = useState(0)\r\n  const [blockCode, setBlockCode] = useState(0)\r\n  const [blockIndexInTrayArr, setBlockIndexInTrayArr] = useState(0)\r\n  const [trayBlockArr, setTrayBlockArr] = useState(createRandomTray())\r\n\r\n  useEffect(() => {\r\n    // Simulate tray after change that\r\n    simulateTray()\r\n  }, [trayBlockArr]);\r\n\r\n  const deliverClickIndex = (row, col) => {\r\n    setBlock(row, col)\r\n  }\r\n\r\n  const boardRowMap = board.map((row, index) => (<BoardRow value={row} rowIndex={index} deliver={deliverClickIndex} key={index}></BoardRow>))\r\n  const trayBlockMap = trayBlockArr.map((blockCode, index) => (<TrayBlock blockCode={blockCode} codeDeliver={setBlockCode} indexDeliver={setBlockIndexInTrayArr} trayIndex={index} key={index}></TrayBlock>))\r\n\r\n  const setBlock = (sRow, sCol) => {\r\n    let tempBoard = board\r\n    let settedBoard = switchBlocks(tempBoard, blockCode, sRow, sCol)\r\n    if (settedBoard === 0 ) {\r\n      console.log(\"nothing to do\")\r\n    }\r\n    else if (typeof settedBoard == \"object\"){\r\n      setBoard([...settedBoard])\r\n      checkerAfterBlockSet()\r\n    }\r\n  }\r\n\r\n  // Action After Block Set\r\n  const checkerAfterBlockSet = () => {\r\n    let copyOfBoard = board\r\n    checkToClear(copyOfBoard)\r\n    trayBlockArr.splice(blockIndexInTrayArr, 1, 0)\r\n    // check blockTray empty\r\n    let sumOfTray = 0\r\n    for (let i = 0; i < 3; i++) {\r\n      sumOfTray += trayBlockArr[i]\r\n    }\r\n    if ( sumOfTray === 0 ) {\r\n      changeRandomTray()\r\n    }\r\n    // Simulate game\r\n    simulateTray()\r\n  }\r\n\r\n  // Board Zone Geo Code (3*3 zone)\r\n  const defGeo = {\r\n    1: {1:0, 2:0, 3:2, 4:2}, 2: {1:0, 2:3, 3:2, 4:5}, 3: {1:0, 2:6, 3:2, 4:8},\r\n    4: {1:3, 2:0, 3:5, 4:2}, 5: {1:3, 2:3, 3:5, 4:5}, 6: {1:3, 2:6, 3:5, 4:8},\r\n    7: {1:6, 2:0, 3:8, 4:2}, 8: {1:6, 2:3, 3:8, 4:5}, 9: {1:6, 2:6, 3:8, 4:8}\r\n  }\r\n  // Check Cell to Clear\r\n  const checkToClear = (copyOfBoard) => {\r\n    let toClear = {\r\n      row: [],\r\n      col: [],\r\n      sqr: []\r\n    }\r\n    for (let i = 0; i < 9; i++) {\r\n      let sumOfRow = 0;\r\n      for (let j = 0; j < 9; j++) {\r\n        sumOfRow += copyOfBoard[i][j] \r\n      }\r\n      if (sumOfRow === 9) {\r\n        toClear.row.push(i)\r\n      }\r\n    }\r\n    for (let i = 0; i < 9; i++) {\r\n      let sumOfCol = 0;\r\n      for (let j = 0; j < 9; j++) {\r\n        sumOfCol += copyOfBoard[j][i] \r\n      }\r\n      if (sumOfCol === 9) {\r\n        toClear.col.push(i)\r\n      }\r\n    }\r\n    for (let i = 1; i < 10; i++) {\r\n      let sumOfSquare = 0;\r\n      for (let j = defGeo[i][1]; j <= defGeo[i][3]; j++) {\r\n        for (let k = defGeo[i][2]; k <= defGeo[i][4]; k++) {\r\n          sumOfSquare += copyOfBoard[j][k] \r\n        }\r\n        if (sumOfSquare === 9) {\r\n          toClear.sqr.push(i)\r\n        }\r\n      }\r\n    }\r\n    clearBoard(toClear)\r\n  }\r\n\r\n  const clearBoard = (toClear) => {\r\n    let copyOfBoard = board\r\n    let scoreByAction = 0\r\n    for (let rmRow of toClear.row){\r\n      for (let i = 0; i < 9; i++) {\r\n        copyOfBoard[rmRow][i] = 0\r\n        scoreByAction ++\r\n      }\r\n    }\r\n    for (let rmCol of toClear.col){ \r\n      for (let i = 0; i < 9; i++) {\r\n        copyOfBoard[i][rmCol] = 0\r\n        scoreByAction ++\r\n      }\r\n    }\r\n    for (let rmSqr of toClear.sqr){\r\n      for (let j = defGeo[rmSqr][1]; j <= defGeo[rmSqr][3]; j++) {\r\n        for (let k = defGeo[rmSqr][2]; k <= defGeo[rmSqr][4]; k++) {\r\n          copyOfBoard[j][k] = 0\r\n          scoreByAction ++\r\n        }\r\n      }\r\n    }\r\n    setScore(score + scoreByAction)\r\n    setBoard([...copyOfBoard])\r\n  }\r\n\r\n  // Function for random tray\r\n  function changeRandomTray() {\r\n    let tempArr = []\r\n    const min = Math.ceil(1)\r\n    const max = Math.floor(5)\r\n    for (let i = 1; i <= 3; i++) {  \r\n      tempArr.push(Math.floor(Math.random() * (max - min + 1)) + min)\r\n    }\r\n    setTrayBlockArr(tempArr)\r\n  }\r\n\r\n  const simulateTray = () => {\r\n    let setCount = 0\r\n    let emptyTrayCount = 0\r\n    // for each tray block\r\n    for (let i = 0; i < trayBlockArr.length; i++) {\r\n      if ( trayBlockArr[i] !== 0 ) {\r\n        // for each row \r\n        for (let j = 0; j < 9; j++) {\r\n          // for each col\r\n          for (let k = 0; k < 9; k++) {\r\n            if ( board[j][k] === 0 ) {\r\n              console.log(trayBlockArr[i])\r\n              setCount += simulateBlockSet(board, trayBlockArr[i], j, k)\r\n            } \r\n          }\r\n        }\r\n      }\r\n      else if ( trayBlockArr[i] === 0 ) {\r\n        emptyTrayCount ++\r\n      }\r\n    }\r\n    if ( setCount === 0 && emptyTrayCount === 3) {\r\n      console.log(setCount + 'but tray empty pass')\r\n    }\r\n    else if (setCount === 0 ){\r\n      console.error('gameover')\r\n    }\r\n    else if (setCount !== 0 ){\r\n      console.log(setCount + 'pass')\r\n    }\r\n  }\r\n\r\n  const simulateBlockSet = (simBoard, blockCode, sRow, sCol) => {\r\n    let simSettedBoard = 0\r\n    if ( blockCode !== 0 ) {\r\n      simSettedBoard = simSwitchBlocks(simBoard, blockCode, sRow, sCol)\r\n    } \r\n    if ( simSettedBoard === 0 ) {\r\n      return 0\r\n    }\r\n    else if ( simSettedBoard === 1 ){\r\n      return 1\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"score\">\r\n        <div className=\"score-text\">\r\n        {score}\r\n        </div>\r\n      </div>\r\n      <div className=\"board\">\r\n        {boardRowMap}\r\n      </div>\r\n      <div className=\"tray\">\r\n        {trayBlockMap}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","function Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Header from './components/Header';\r\nimport Board from './components/Board';\r\nimport Footer from './components/Footer';\r\n\r\nimport './css/App.css';\r\nimport './css/Board.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"container\">\r\n        <Header />\r\n        <Board />\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}